{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\\\works\\\\react\\\\progect\\\\app\\\\src\\\\components\\\\SliderDetailProduct\\\\SliderDetailProduct.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from \"react\";\nimport Slider from \"react-slick\"; // import './SliderDetailProduct.css';\n// import './slick.css';\n// const SliderDetailProduct = (props) => {\n//     const slider1 = useRef(null);\n//     const slider2 = useRef(null);\n//     const [nav1, setNav1] = useState(null)\n//     const [nav2, setNav2] = useState(null)\n//     useEffect(() => {\n//         setNav1(slider1)\n//         setNav2(slider2);\n//     })\n//     return (\n//         <>\n//             <div className=\"slider-detail_product\">\n//                 <Slider \n//                     //asNavFor={nav2}\n//                     ref={slider1}\n//                     // ref={slider => (this.slider1 = slider)}\n//                     arrows={false}\n//                     //infinite={true}\n//                     //speed={500}\n//                     slidesToShow={1}\n//                     slidesToScroll={1}\n//                 >\n//                     <div>\n//                         <div>1</div>\n//                     </div>\n//                     <div>\n//                         <div>2</div>\n//                     </div>\n//                     <div>\n//                         <div>3</div>\n//                     </div>\n//                     <div>\n//                         <div>4</div>\n//                     </div>\n//                     <div>\n//                         <div>5</div>\n//                     </div>\n//                 </Slider>\n//             </div>\n//             <div className=\"slider-mimi_detail_product\">\n//                 <Slider \n//                     asNavFor={slider1}\n//                     ref={slider2}\n//                     // ref={slider => (this.slider2 = slider)}\n//                     arrows={false}\n//                     infinite={true}\n//                     speed={500}\n//                     slidesToShow={4}\n//                     slidesToScroll={1}\n//                 >\n//                     <div>\n//                         <div>1</div>\n//                     </div>\n//                     <div>\n//                         <div>2</div>\n//                     </div>\n//                     <div>\n//                         <div>3</div>\n//                     </div>\n//                     <div>\n//                         <div>4</div>\n//                     </div>\n//                     <div>\n//                         <div>5</div>\n//                     </div>\n//                 </Slider>\n//             </div>\n//         </>\n//     );\n// }\n// export default SliderDetailProduct\n\nexport default class SliderDetailProduct extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nav1: null,\n      nav2: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      nav1: this.slider1,\n      nav2: this.slider2\n    });\n  }\n\n  render() {\n    // ЭТОТ КОД НУЖЕН ЖДЯ ТОГО, ЧТО БЫ, ЕСЛИ СЛАЙДОВ МЕНЬШЕ ЧЕМ 5, ТО МЫ ОТКЛЮЧАЕМ КЛОНЫ, ЕСЛИ БОЛЬШЕ, ТО ВКЛЮЧАЕМ\n    // количество отображаемых слайдов за раз у мини-слайдера\n    let quantitySlide = 5; // ищем все слайды с клонами у мини-слайдера\n\n    let hideSlideClone = document.querySelectorAll('.slider-mimi_detail_product .slick-cloned'); // если количество найденных слайдов меньше чем количество отображаемых слайдов, то мы удаляем у них клоны, если больше, то оставляем\n\n    hideSlideClone.forEach(item => {\n      if (hideSlideClone.length <= quantitySlide) {\n        return item.style = 'display: none';\n      } else {\n        return item.style = 'display: block';\n      }\n    });\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"wrap-two-sliders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"slider-detail_product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, __jsx(Slider, {\n      asNavFor: this.state.nav2,\n      ref: slider => this.slider1 = slider,\n      arrows: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      fade: true,\n      responsive: [{\n        breakpoint: 767,\n        settings: {\n          dots: true\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, this.props.data.map((item, key) => {\n      return __jsx(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 37\n        }\n      }, __jsx(\"div\", {\n        className: \"slide\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 41\n        }\n      }, __jsx(\"img\", {\n        src: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 45\n        }\n      })));\n    }))), __jsx(\"div\", {\n      className: \"slider-mimi_detail_product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, __jsx(Slider, {\n      asNavFor: this.state.nav1,\n      ref: slider => this.slider2 = slider,\n      arrows: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: quantitySlide,\n      slidesToScroll: 1,\n      focusOnSelect: true,\n      vertical: true,\n      dots: false,\n      responsive: [{\n        breakpoint: 1279,\n        settings: {\n          vertical: false,\n          arrows: true,\n          slidesToShow: 3,\n          centerMode: true,\n          centerPadding: '5px'\n        }\n      }, {\n        breakpoint: 1023,\n        settings: {\n          vertical: false,\n          arrows: true,\n          slidesToShow: 3,\n          centerMode: true,\n          centerPadding: '5px'\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, this.props.data.map((item, key) => {\n      return __jsx(\"div\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 37\n        }\n      }, __jsx(\"div\", {\n        className: \"slide-mini\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 41\n        }\n      }, __jsx(\"img\", {\n        src: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 45\n        }\n      })));\n    })))));\n  }\n\n}","map":{"version":3,"sources":["D:/web/works/react/progect/app/src/components/SliderDetailProduct/SliderDetailProduct.js"],"names":["React","useState","useRef","Slider","SliderDetailProduct","Component","constructor","props","state","nav1","nav2","componentDidMount","setState","slider1","slider2","render","quantitySlide","hideSlideClone","document","querySelectorAll","forEach","item","length","style","slider","breakpoint","settings","dots","data","map","key","vertical","arrows","slidesToShow","centerMode","centerPadding"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Slider from \"react-slick\";\r\n// import './SliderDetailProduct.css';\r\n// import './slick.css';\r\n\r\n// const SliderDetailProduct = (props) => {\r\n//     const slider1 = useRef(null);\r\n//     const slider2 = useRef(null);\r\n//     const [nav1, setNav1] = useState(null)\r\n//     const [nav2, setNav2] = useState(null)\r\n\r\n//     useEffect(() => {\r\n//         setNav1(slider1)\r\n//         setNav2(slider2);\r\n//     })\r\n\r\n//     return (\r\n//         <>\r\n//             <div className=\"slider-detail_product\">\r\n//                 <Slider \r\n//                     //asNavFor={nav2}\r\n//                     ref={slider1}\r\n//                     // ref={slider => (this.slider1 = slider)}\r\n//                     arrows={false}\r\n//                     //infinite={true}\r\n//                     //speed={500}\r\n//                     slidesToShow={1}\r\n//                     slidesToScroll={1}\r\n//                 >\r\n//                     <div>\r\n//                         <div>1</div>\r\n//                     </div>\r\n//                     <div>\r\n//                         <div>2</div>\r\n//                     </div>\r\n//                     <div>\r\n//                         <div>3</div>\r\n//                     </div>\r\n//                     <div>\r\n//                         <div>4</div>\r\n//                     </div>\r\n//                     <div>\r\n//                         <div>5</div>\r\n//                     </div>\r\n//                 </Slider>\r\n//             </div>\r\n\r\n//             <div className=\"slider-mimi_detail_product\">\r\n//                 <Slider \r\n//                     asNavFor={slider1}\r\n//                     ref={slider2}\r\n//                     // ref={slider => (this.slider2 = slider)}\r\n//                     arrows={false}\r\n//                     infinite={true}\r\n//                     speed={500}\r\n//                     slidesToShow={4}\r\n//                     slidesToScroll={1}\r\n//                 >\r\n//                     <div>\r\n//                         <div>1</div>\r\n//                     </div>\r\n//                     <div>\r\n//                         <div>2</div>\r\n//                     </div>\r\n//                     <div>\r\n//                         <div>3</div>\r\n//                     </div>\r\n//                     <div>\r\n//                         <div>4</div>\r\n//                     </div>\r\n//                     <div>\r\n//                         <div>5</div>\r\n//                     </div>\r\n//                 </Slider>\r\n//             </div>\r\n//         </>\r\n//     );\r\n\r\n// }\r\n\r\n// export default SliderDetailProduct\r\n\r\n\r\n\r\nexport default class SliderDetailProduct extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nav1: null,\r\n            nav2: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            nav1: this.slider1,\r\n            nav2: this.slider2\r\n        });\r\n    }\r\n    \r\n\r\n    render() {\r\n            // ЭТОТ КОД НУЖЕН ЖДЯ ТОГО, ЧТО БЫ, ЕСЛИ СЛАЙДОВ МЕНЬШЕ ЧЕМ 5, ТО МЫ ОТКЛЮЧАЕМ КЛОНЫ, ЕСЛИ БОЛЬШЕ, ТО ВКЛЮЧАЕМ\r\n            // количество отображаемых слайдов за раз у мини-слайдера\r\n        let quantitySlide = 5\r\n            // ищем все слайды с клонами у мини-слайдера\r\n        let hideSlideClone = document.querySelectorAll('.slider-mimi_detail_product .slick-cloned');\r\n            // если количество найденных слайдов меньше чем количество отображаемых слайдов, то мы удаляем у них клоны, если больше, то оставляем\r\n        hideSlideClone.forEach((item) => {\r\n            if (hideSlideClone.length <= quantitySlide) {\r\n                return item.style = 'display: none'\r\n            } else {\r\n                return item.style = 'display: block'\r\n            }\r\n        });\r\n\r\n\r\n        return (\r\n            <>\r\n                <div className=\"wrap-two-sliders\">\r\n                    <div className=\"slider-detail_product\">\r\n                        <Slider\r\n                            asNavFor={this.state.nav2}\r\n                            ref={slider => (this.slider1 = slider)}\r\n                            arrows={false}\r\n                            infinite={true}\r\n                            speed={500}\r\n                            slidesToShow={1}\r\n                            slidesToScroll={1}\r\n                            fade={true}\r\n                            responsive={[\r\n                                {\r\n                                    breakpoint: 767,\r\n                                    settings: {\r\n                                        dots: true,\r\n                                    }\r\n                                },\r\n                            ]}\r\n                        >\r\n                            {this.props.data.map((item, key) => {\r\n                                return (\r\n                                    <div key={key}>\r\n                                        <div className=\"slide\">\r\n                                            <img src={item} />\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n\r\n                        </Slider>\r\n                    </div>\r\n\r\n                    <div className=\"slider-mimi_detail_product\">\r\n                        <Slider\r\n                            asNavFor={this.state.nav1}\r\n                            ref={slider => (this.slider2 = slider)}\r\n                            arrows={true}\r\n                            infinite={true}\r\n                            speed={500}\r\n                            slidesToShow={quantitySlide}\r\n                            slidesToScroll={1}\r\n                            focusOnSelect={true}\r\n                            vertical={true}\r\n                            dots={false}\r\n                            responsive={[\r\n                                {\r\n                                    breakpoint: 1279,\r\n                                    settings: {\r\n                                        vertical: false,\r\n                                        arrows: true,\r\n                                        slidesToShow: 3,\r\n                                        centerMode: true,\r\n                                        centerPadding: '5px',\r\n                                    }\r\n                                },\r\n                                {\r\n                                    breakpoint: 1023,\r\n                                    settings: {\r\n                                        vertical: false,\r\n                                        arrows: true,\r\n                                        slidesToShow: 3,\r\n                                        centerMode: true,\r\n                                        centerPadding: '5px',\r\n                                    }\r\n                                },\r\n                            ]}\r\n                        >\r\n                            {this.props.data.map((item, key) => {\r\n                                return (\r\n                                    <div key={key}>\r\n                                        <div className=\"slide-mini\">\r\n                                            <img src={item} />\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}